org: blackgecko
app: demesne
service: demesne

frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: "20201221"
  region: ap-southeast-2
#   iam:
#     role:
#       statements:
#         - Effect: Allow
#           Action:
#             - apigateway:POST
#           Resource: !Sub arn:aws:apigateway:${AWS::Region}::/domainnames
#         - Effect: Allow
#           Action:
#             - apigateway:GET
#             - apigateway:DELETE
#           Resource: !Sub arn:aws:apigateway:${AWS::Region}::/domainnames/*
#         - Effect: Allow
#           Action:
#             - apigateway:PATCH
#             - apigateway:POST
#           Resource:
#             - !Sub arn:aws:apigateway:${AWS::Region}::/domainnames/*/basepathmappings
#             - !Sub arn:aws:apigateway:${AWS::Region}::/domainnames/*/basepathmappings/*
#         - Effect: Allow
#           Action:
#             - cloudfront:UpdateDistribution
#           Resource: '*'
#         - Effect: Allow
#           Action:
#             - route53:ListHostedZones
#           Resource: '*'
#         - Effect: Allow
#           Action:
#             - acm:ListCertificates
#           Resource: '*'
#         - Effect: Allow
#           Action:
#             - route53:ChangeResourceRecordSets
#             - route53:GetHostedZone
#             - route53:ListResourceRecordSets
#           Resource: !Sub arn:aws:route53:::hostedzone/Z068757918HDU1RII1454
#         - Effect: Allow
#           Action:
#             - iam:CreateServiceLinkedRole
#           Resource:
#             - !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ops.apigateway.amazonaws.com/AWSServiceRoleForAPIGateway

# plugins:
#   - serverless-domain-manager

# custom:
#   customDomain:
#     domainName: api.demesne.name
#     basePath: ""
#     # stage: ${self:provider.stage}
#     createRoute53Record: true

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: /hello
          method: get
          cors: true
  person:
    handler: handler.person
    events:
      - http:
          path: /person
          method: get
          cors: true
